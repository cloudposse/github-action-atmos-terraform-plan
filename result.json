{
  "atmos_cli_config": {
    "base_path": "./tests/terraform",
    "components": {
      "helmfile": {
        "base_path": "components/helmfile",
        "cluster_name_pattern": "{namespace}-{tenant}-{environment}-{stage}-eks-cluster",
        "command": "",
        "helm_aws_profile_pattern": "{namespace}-{tenant}-gbl-{stage}-helm",
        "kubeconfig_path": "/conf/.kube/",
        "use_eks": true
      },
      "terraform": {
        "append_user_agent": "Atmos/1.110.0 (Cloud Posse; +https://atmos.tools)",
        "apply_auto_approve": false,
        "auto_generate_backend_file": true,
        "base_path": "components/terraform",
        "command": "",
        "deploy_run_init": true,
        "init_run_reconfigure": true,
        "shell": {
          "prompt": ""
        }
      }
    },
    "stacks": {
      "base_path": "stacks",
      "excluded_paths": [
        "**/_defaults.yaml"
      ],
      "included_paths": [
        "orgs/**/*"
      ],
      "name_pattern": "{tenant}-{environment}-{stage}",
      "name_template": ""
    },
    "workflows": {
      "base_path": "stacks/workflows"
    }
  },
  "atmos_component": "foobar/changes",
  "atmos_manifest": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
  "atmos_stack": "plat-ue2-sandbox",
  "atmos_stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
  "backend": {
    "path": "terraform.tfstate"
  },
  "backend_type": "local",
  "command": "terraform",
  "component": "foobar",
  "component_info": {
    "component_path": "tests/terraform/components/terraform/foobar",
    "component_type": "terraform",
    "terraform_config": {
      "path": "tests/terraform/components/terraform/foobar",
      "variables": {
        "additional_tag_map": {
          "name": "additional_tag_map",
          "type": "map(string)",
          "description": "Additional key-value pairs to add to each map in `tags_as_list_of_maps`. Not added to `tags` or `id`.\nThis is for some rare cases where resources want additional configuration of tags\nand therefore take a list of maps with tag key, value, and additional configuration.\n",
          "default": {},
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 181
          }
        },
        "attributes": {
          "name": "attributes",
          "type": "list(string)",
          "description": "ID element. Additional attributes (e.g. `workers` or `cluster`) to add to `id`,\nin the order they appear in the list. New attributes are appended to the\nend of the list. The elements of the list are joined by the `delimiter`\nand treated as a single ID element.\n",
          "default": [],
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 146
          }
        },
        "context": {
          "name": "context",
          "type": "any",
          "description": "Single object for setting entire context at once.\nSee description of individual variables for details.\nLeave string and numeric variables as `null` to use default value.\nIndividual variable settings (non-null) override settings in context object,\nexcept for attributes, tags, and additional_tag_map, which are merged.\n",
          "default": {
            "additional_tag_map": {},
            "attributes": [],
            "delimiter": null,
            "descriptor_formats": {},
            "enabled": true,
            "environment": null,
            "id_length_limit": null,
            "label_key_case": null,
            "label_order": [],
            "label_value_case": null,
            "labels_as_tags": [
              "unset"
            ],
            "name": null,
            "namespace": null,
            "regex_replace_chars": null,
            "stage": null,
            "tags": {},
            "tenant": null
          },
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 50
          }
        },
        "delimiter": {
          "name": "delimiter",
          "type": "string",
          "description": "Delimiter to be used between ID elements.\nDefaults to `-` (hyphen). Set to `\"\"` to use no delimiter at all.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 137
          }
        },
        "descriptor_formats": {
          "name": "descriptor_formats",
          "type": "any",
          "description": "Describe additional descriptors to be output in the `descriptors` output map.\nMap of maps. Keys are names of descriptors. Values are maps of the form\n`{\n   format = string\n   labels = list(string)\n}`\n(Type is `any` so the map values can later be enhanced to provide additional options.)\n`format` is a Terraform format string to be passed to the `format()` function.\n`labels` is a list of labels, in order, to pass to `format()` function.\nLabel values will be normalized before being passed to `format()` so they will be\nidentical to how they appear in `id`.\nDefault is `{}` (`descriptors` output will be empty).\n",
          "default": {},
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 260
          }
        },
        "enable_failure": {
          "name": "enable_failure",
          "type": "bool",
          "description": "Always fail",
          "default": false,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/variables.tf",
            "line": 6
          }
        },
        "enable_warning": {
          "name": "enable_warning",
          "type": "bool",
          "description": "Enable warning",
          "default": false,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/variables.tf",
            "line": 12
          }
        },
        "enabled": {
          "name": "enabled",
          "type": "bool",
          "description": "Set to false to prevent the module from creating any resources",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 97
          }
        },
        "environment": {
          "name": "environment",
          "type": "string",
          "description": "ID element. Usually used for region e.g. 'uw2', 'us-west-2', OR role 'prod', 'staging', 'dev', 'UAT'",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 115
          }
        },
        "example": {
          "name": "example",
          "type": "string",
          "description": "testing variable",
          "default": null,
          "required": true,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/variables.tf",
            "line": 1
          }
        },
        "id_length_limit": {
          "name": "id_length_limit",
          "type": "number",
          "description": "Limit `id` to this many characters (minimum 6).\nSet to `0` for unlimited length.\nSet to `null` for keep the existing setting, which defaults to `0`.\nDoes not affect `id_full`.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 211
          }
        },
        "label_key_case": {
          "name": "label_key_case",
          "type": "string",
          "description": "Controls the letter case of the `tags` keys (label names) for tags generated by this module.\nDoes not affect keys of tags passed in via the `tags` input.\nPossible values: `lower`, `title`, `upper`.\nDefault value: `title`.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 226
          }
        },
        "label_order": {
          "name": "label_order",
          "type": "list(string)",
          "description": "The order in which the labels (ID elements) appear in the `id`.\nDefaults to [\"namespace\", \"environment\", \"stage\", \"name\", \"attributes\"].\nYou can omit any of the 6 labels (\"tenant\" is the 6th), but at least one must be present.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 191
          }
        },
        "label_value_case": {
          "name": "label_value_case",
          "type": "string",
          "description": "Controls the letter case of ID elements (labels) as included in `id`,\nset as tag values, and output by this module individually.\nDoes not affect values of tags passed in via the `tags` input.\nPossible values: `lower`, `title`, `upper` and `none` (no transformation).\nSet this to `title` and set `delimiter` to `\"\"` to yield Pascal Case IDs.\nDefault value: `lower`.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 242
          }
        },
        "labels_as_tags": {
          "name": "labels_as_tags",
          "type": "set(string)",
          "description": "Set of labels (ID elements) to include as tags in the `tags` output.\nDefault is to include all labels.\nTags with empty values will not be included in the `tags` output.\nSet to `[]` to suppress all generated tags.\n**Notes:**\n  The value of the `name` tag, if included, will be the `id`, not the `name`.\n  Unlike other `null-label` inputs, the initial setting of `labels_as_tags` cannot be\n  changed in later chained modules. Attempts to change it will be silently ignored.\n",
          "default": [
            "default"
          ],
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 157
          }
        },
        "name": {
          "name": "name",
          "type": "string",
          "description": "ID element. Usually the component or solution name, e.g. 'app' or 'jenkins'.\nThis is the only ID element not also included as a `tag`.\nThe \"name\" tag is set to the full `id` string. There is no tag with the value of the `name` input.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 127
          }
        },
        "namespace": {
          "name": "namespace",
          "type": "string",
          "description": "ID element. Usually an abbreviation of your organization name, e.g. 'eg' or 'cp', to help ensure generated IDs are globally unique",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 103
          }
        },
        "regex_replace_chars": {
          "name": "regex_replace_chars",
          "type": "string",
          "description": "Terraform regular expression (regex) string.\nCharacters matching the regex will be removed from the ID elements.\nIf not set, `\"/[^a-zA-Z0-9-]/\"` is used to remove all characters other than hyphens, letters and digits.\n",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 201
          }
        },
        "stage": {
          "name": "stage",
          "type": "string",
          "description": "ID element. Usually used to indicate role, e.g. 'prod', 'staging', 'source', 'build', 'test', 'deploy', 'release'",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 121
          }
        },
        "tags": {
          "name": "tags",
          "type": "map(string)",
          "description": "Additional tags (e.g. `{'BusinessUnit': 'XYZ'}`).\nNeither the tag keys nor the tag values will be modified by this module.\n",
          "default": {},
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 172
          }
        },
        "tenant": {
          "name": "tenant",
          "type": "string",
          "description": "ID element _(Rarely used, not included by default)_. A customer identifier, indicating who this instance of a resource is for",
          "default": null,
          "required": false,
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 109
          }
        }
      },
      "outputs": {},
      "required_providers": {
        "random": {},
        "validation": {
          "source": "tlkamp/validation",
          "version_constraints": [
            "1.1.1"
          ]
        }
      },
      "provider_configs": {
        "validation": {
          "name": "validation"
        }
      },
      "managed_resources": {
        "random_id.foo": {
          "mode": "managed",
          "type": "random_id",
          "name": "foo",
          "provider": {
            "name": "random"
          },
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/main.tf",
            "line": 1
          }
        }
      },
      "data_resources": {
        "data.validation_warning.warn": {
          "mode": "data",
          "type": "validation_warning",
          "name": "warn",
          "provider": {
            "name": "validation"
          },
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/main.tf",
            "line": 20
          }
        }
      },
      "module_calls": {
        "this": {
          "name": "this",
          "source": "cloudposse/label/null",
          "version": "0.25.0",
          "pos": {
            "filename": "tests/terraform/components/terraform/foobar/context.tf",
            "line": 23
          }
        }
      }
    }
  },
  "deps": [
    "catalog/foobar-changes",
    "orgs/foo/plat/sandbox/plat-ue2-sandbox"
  ],
  "deps_all": [
    "catalog/foobar",
    "catalog/foobar-changes",
    "orgs/foo/plat/sandbox/plat-ue2-sandbox"
  ],
  "env": {},
  "imports": [
    "catalog/foobar",
    "catalog/foobar-changes",
    "catalog/foobar-changes-atmos",
    "catalog/foobar-disabled",
    "catalog/foobar-fail"
  ],
  "inheritance": [
    "foobar"
  ],
  "metadata": {},
  "overrides": {},
  "providers": {},
  "remote_state_backend": {
    "path": "terraform.tfstate"
  },
  "remote_state_backend_type": "local",
  "settings": {
    "github": {
      "actions_enabled": true,
      "gitops": {
        "artifact-storage": {
          "blob-account-name": null,
          "blob-container-name": null,
          "bucket": "__STORAGE_BUCKET_2__",
          "cosmos-container-name": null,
          "cosmos-database-name": null,
          "cosmos-endpoint": null,
          "metadata-repository-type": "dynamo",
          "plan-repository-type": "s3",
          "region": "__STORAGE_REGION_2__",
          "role": "__STORAGE_ROLE_2__",
          "table": "__STORAGE_TABLE_2__"
        },
        "infracost-enabled": "__INFRACOST_ENABLED__",
        "role": {
          "apply": "__APPLY_ROLE__",
          "plan": "__PLAN_ROLE__"
        },
        "terraform-version": "1.5.2"
      }
    },
    "integrations": {
      "github": {
        "gitops": {
          "artifact-storage": {
            "bucket": "__STORAGE_BUCKET__",
            "region": "__STORAGE_REGION__",
            "role": "__STORAGE_ROLE__",
            "table": "__STORAGE_TABLE__"
          },
          "infracost-enabled": "__INFRACOST_ENABLED__",
          "matrix": {
            "group-by": ".stack_slug | split(\"-\") | [.[0], .[2]] | join(\"-\")",
            "sort-by": ".stack_slug"
          },
          "role": {
            "apply": "__APPLY_ROLE__",
            "plan": "__PLAN_ROLE__"
          },
          "terraform-version": "1.5.2"
        }
      }
    }
  },
  "sources": {
    "backend": {
      "path": {
        "final_value": "terraform.tfstate",
        "name": "path",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.backend.local",
            "variable_value": "terraform.tfstate"
          }
        ]
      }
    },
    "env": {},
    "settings": {
      "github": {
        "final_value": {
          "actions_enabled": true,
          "gitops": {
            "artifact-storage": {
              "blob-account-name": null,
              "blob-container-name": null,
              "bucket": "__STORAGE_BUCKET_2__",
              "cosmos-container-name": null,
              "cosmos-database-name": null,
              "cosmos-endpoint": null,
              "metadata-repository-type": "dynamo",
              "plan-repository-type": "s3",
              "region": "__STORAGE_REGION_2__",
              "role": "__STORAGE_ROLE_2__",
              "table": "__STORAGE_TABLE_2__"
            },
            "infracost-enabled": "__INFRACOST_ENABLED__",
            "role": {
              "apply": "__APPLY_ROLE__",
              "plan": "__PLAN_ROLE__"
            },
            "terraform-version": "1.5.2"
          }
        },
        "name": "github",
        "stack_dependencies": [
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar-changes",
            "stack_file_section": "components.terraform.settings",
            "variable_value": {
              "actions_enabled": true
            }
          },
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar",
            "stack_file_section": "components.terraform.settings",
            "variable_value": {
              "actions_enabled": true,
              "gitops": {
                "artifact-storage": {
                  "blob-account-name": null,
                  "blob-container-name": null,
                  "bucket": "__STORAGE_BUCKET_2__",
                  "cosmos-container-name": null,
                  "cosmos-database-name": null,
                  "cosmos-endpoint": null,
                  "metadata-repository-type": "dynamo",
                  "plan-repository-type": "s3",
                  "region": "__STORAGE_REGION_2__",
                  "role": "__STORAGE_ROLE_2__",
                  "table": "__STORAGE_TABLE_2__"
                },
                "infracost-enabled": "__INFRACOST_ENABLED__",
                "role": {
                  "apply": "__APPLY_ROLE__",
                  "plan": "__PLAN_ROLE__"
                },
                "terraform-version": "1.5.2"
              }
            }
          }
        ]
      },
      "integrations": {
        "final_value": {
          "github": {
            "gitops": {
              "artifact-storage": {
                "bucket": "__STORAGE_BUCKET__",
                "region": "__STORAGE_REGION__",
                "role": "__STORAGE_ROLE__",
                "table": "__STORAGE_TABLE__"
              },
              "infracost-enabled": "__INFRACOST_ENABLED__",
              "matrix": {
                "group-by": ".stack_slug | split(\"-\") | [.[0], .[2]] | join(\"-\")",
                "sort-by": ".stack_slug"
              },
              "role": {
                "apply": "__APPLY_ROLE__",
                "plan": "__PLAN_ROLE__"
              },
              "terraform-version": "1.5.2"
            }
          }
        },
        "name": "integrations",
        "stack_dependencies": []
      }
    },
    "vars": {
      "enable_failure": {
        "final_value": false,
        "name": "enable_failure",
        "stack_dependencies": [
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar-changes",
            "stack_file_section": "components.terraform.vars",
            "variable_value": false
          }
        ]
      },
      "enable_warning": {
        "final_value": true,
        "name": "enable_warning",
        "stack_dependencies": [
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar-changes",
            "stack_file_section": "components.terraform.vars",
            "variable_value": true
          }
        ]
      },
      "enabled": {
        "final_value": true,
        "name": "enabled",
        "stack_dependencies": [
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar-changes",
            "stack_file_section": "components.terraform.vars",
            "variable_value": true
          },
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar",
            "stack_file_section": "components.terraform.vars",
            "variable_value": false
          }
        ]
      },
      "environment": {
        "final_value": "ue2",
        "name": "environment",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.vars",
            "variable_value": "ue2"
          }
        ]
      },
      "example": {
        "final_value": "blue",
        "name": "example",
        "stack_dependencies": [
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar-changes",
            "stack_file_section": "components.terraform.vars",
            "variable_value": "blue"
          },
          {
            "dependency_type": "import",
            "stack_file": "catalog/foobar",
            "stack_file_section": "components.terraform.vars",
            "variable_value": "blue"
          }
        ]
      },
      "label_order": {
        "final_value": [
          "namespace",
          "tenant",
          "environment",
          "stage",
          "name",
          "attributes"
        ],
        "name": "label_order",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.vars",
            "variable_value": [
              "namespace",
              "tenant",
              "environment",
              "stage",
              "name",
              "attributes"
            ]
          }
        ]
      },
      "namespace": {
        "final_value": "foo",
        "name": "namespace",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.vars",
            "variable_value": "foo"
          }
        ]
      },
      "stage": {
        "final_value": "sandbox",
        "name": "stage",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.vars",
            "variable_value": "sandbox"
          }
        ]
      },
      "tenant": {
        "final_value": "plat",
        "name": "tenant",
        "stack_dependencies": [
          {
            "dependency_type": "inline",
            "stack_file": "orgs/foo/plat/sandbox/plat-ue2-sandbox",
            "stack_file_section": "terraform.vars",
            "variable_value": "plat"
          }
        ]
      }
    }
  },
  "stack": "plat-ue2-sandbox",
  "vars": {
    "enable_failure": false,
    "enable_warning": true,
    "enabled": true,
    "environment": "ue2",
    "example": "blue",
    "label_order": [
      "namespace",
      "tenant",
      "environment",
      "stage",
      "name",
      "attributes"
    ],
    "namespace": "foo",
    "stage": "sandbox",
    "tenant": "plat"
  },
  "workspace": "plat-ue2-sandbox-foobar-changes"
}

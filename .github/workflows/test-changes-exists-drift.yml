name: "Test - Changes exists - Drift"

on:
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-2

# Permissions required for assuming AWS identity
permissions:
  id-token: write
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - shell: bash
        run: |
          mkdir -p ${{ runner.temp }}
          cat > ${{ runner.temp }}/atmos-gitops.yaml <<EOL
          atmos-version: 1.45.3
          atmos-config-path: ./tests/
          terraform-state-bucket: ${{ secrets.TERRAFORM_STATE_BUCKET }}
          terraform-state-table: ${{ secrets.TERRAFORM_STATE_TABLE }}
          terraform-state-role: ${{ secrets.TERRAFORM_STATE_ROLE }}
          terraform-plan-role: ${{ secrets.TERRAFORM_PLAN_ROLE }}
          terraform-version: 1.5.2
          aws-region: ${{ env.AWS_REGION }}
          sort-by: .stack_slug
          group-by: .stack_slug | split("-") | [.[0], .[2]] | join("-")          
          EOL

      - name: Plan Atmos Component
        id: current
        uses: ./
        with:
          component: "foobar/changes"
          stack: "plat-ue2-sandbox"
          sha: da39a3ee5e6b4b0d3255bfef95601890afd80709
          drift-detection-mode-enabled: true
          atmos-gitops-config-path: "${{ runner.temp }}/atmos-gitops.yaml"

    outputs:
      result: ${{ steps.current.outcome }}
      summary: ${{ steps.current.outputs.summary }}

  assert:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: nick-fields/assert-action@v1
        with:
          expected: 'success'
          actual: "${{ needs.test.outputs.result }}"

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        id: metadata
        run: |
          set +e
          
          test -d ./metadata
          DIR_EXISTS=$?
          echo "dir_exists=${DIR_EXISTS}" >> $GITHUB_OUTPUT

          test -f ./metadata/plat-ue2-sandbox-foobar_changes.metadata.json
          FILE_EXISTS=$?
          echo "file_exists=${FILE_EXISTS}" >> $GITHUB_OUTPUT

          test -f ./metadata/step-summary-plat-ue2-sandbox-foobar_changes.md
          FILE_EXISTS=$?
          echo "file_summary_md_exists=${FILE_EXISTS}" >> $GITHUB_OUTPUT

          test -f ./metadata/issue-description-plat-ue2-sandbox-foobar_changes.md
          FILE_EXISTS=$?
          echo "file_md_exists=${FILE_EXISTS}" >> $GITHUB_OUTPUT
          
          echo "file_md=$(cat ./metadata/issue-description-plat-ue2-sandbox-foobar_changes.md | jq -Rs .)" >> $GITHUB_OUTPUT
          
          echo "file_json=$(cat ./metadata/plat-ue2-sandbox-foobar_changes.metadata.json | jq -Rs . )" >> $GITHUB_OUTPUT
          
          echo files_json_count=$(ls -lA ./metadata/*.json | wc -l) >> $GITHUB_OUTPUT

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.metadata.outputs.dir_exists }}"
          expected: "0"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.metadata.outputs.file_exists }}"
          expected: "0"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.metadata.outputs.file_md_exists }}"
          expected: "0"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.metadata.outputs.file_summary_md_exists }}"
          expected: "0"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ fromJSON(needs.test.outputs.summary) }}"
          expected: "${{ fromJSON(steps.metadata.outputs.file_md) }}"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.metadata.outputs.files_json_count }}"
          expected: "1"

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ fromJSON(steps.metadata.outputs.file_json) }}"
          expected: |
            { "stack": "plat-ue2-sandbox", "component": "foobar/changes", "componentPath": "components/terraform/foobar", "drifted": true, "error": false }

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ fromJSON(needs.test.outputs.summary) }}"
          expected: |
            ## Drift Detected for `foobar/changes` in `plat-ue2-sandbox`
            
            
            
            <a href="https://cloudposse.com/"><img src="https://cloudposse.com/logo-300x69.svg" width="100px" align="right"/></a>
            
            [![create](https://shields.io/badge/PLAN-CREATE-success?style=for-the-badge)](#user-content-create-plat-ue2-sandbox-foobar_changes)
            
            
            
            
            
            <details><summary><a id="result-plat-ue2-sandbox-foobar_changes" />Plan: 1 to add, 0 to change, 0 to destroy.</summary>
            
            <br/>      
            To reproduce this locally, run:<br/><br/>
            
            ```shell
            atmos terraform plan foobar/changes -s plat-ue2-sandbox
            ```
                
            
            
                
            ---
            ### <a id="create-plat-ue2-sandbox-foobar_changes" />Create
            ```diff
            + random_id.foo
            ```
                
            </details>
            
            
            <details><summary>Terraform <strong>Plan</strong> Summary</summary>
            
            ```hcl
            
              # random_id.foo will be created
              + resource "random_id" "foo" {
                  + b64_std     = (known after apply)
                  + b64_url     = (known after apply)
                  + byte_length = 8
                  + dec         = (known after apply)
                  + hex         = (known after apply)
                  + id          = (known after apply)
                  + keepers     = {
                      + "seed" = "foo-plat-ue2-sandbox-blue"
                    }
                }
            
            Plan: 1 to add, 0 to change, 0 to destroy.
            ```
            
            </details>
                  
            
            
            
            
            <details><summary>Metadata</summary>
            
            ```json
            {
              "component": "foobar/changes",
              "stack": "plat-ue2-sandbox",
              "componentPath": "components/terraform/foobar",
              "commitSHA": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
            }
            ```
            </details>

  teardown:
    runs-on: ubuntu-latest
    needs: [assert]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"
